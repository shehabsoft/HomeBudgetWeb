package com.views;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.net.HttpURLConnection;
import java.net.URL;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;

import javax.faces.bean.ManagedBean;
import javax.faces.bean.RequestScoped;
import javax.faces.bean.SessionScoped;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.rpc.ServiceException;
import javax.xml.ws.Action;
import javax.xml.ws.WebServiceException;

import org.w3c.dom.Document;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;

import com.TransactionService;
import com.TransactionServiceProxy;
import com.TransactionServiceService;
import com.TransactionServiceServiceLocator;
import com.TransactionServiceSoapBindingStub;

import com.dataObjects.CategoryVO;
import com.dataObjects.MonthlyBudgetVO;
import com.dataObjects.PurchaseVO;
import com.google.gson.Gson;
import com.models.Documents.CategoriesKeyBasedDocument;
import com.models.Documents.MonthlyBudgetKeyBasedDocument;

import util.BusinessException;
import util.TransactionServiceParser;


@ManagedBean
@SessionScoped
public class BudgetView extends JSFView {

	
	public BudgetView()
	{	
		super();
		 try {
		 categoryList=categoryView.getCategoryList();
	     categoryIncomeList=categoryView.getCategoryIncomeList();
		 monthlyBudgetVO=getActiveMonthlyBudgetByUserId();
	     monthlyBudgetVO.setCompletedRatio((monthlyBudgetVO.getTotalExpenses()/monthlyBudgetVO.getTotalIncomes())*100);
	     System.out.println("Ratio: "+monthlyBudgetVO.getCompletedRatio());
	     style ="width:"+monthlyBudgetVO.getCompletedRatio()+"%";
		 } catch (Exception e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	}
	private String style;
	private MonthlyBudgetVO monthlyBudgetVO;
	private List<CategoryVO> categoryIncomeList=new ArrayList<CategoryVO>();
	private String[] categoryId;
	private String startDate; 
	private String endDate; 
	
	

	public MonthlyBudgetVO getMonthlyBudgetVO() {
		return monthlyBudgetVO;
	}
	public void setMonthlyBudgetVO(MonthlyBudgetVO monthlyBudgetVO) {
		this.monthlyBudgetVO = monthlyBudgetVO;
	}

	private String[] categoryIncomeId;

	public List<CategoryVO> getCategoryIncomeList() {
		return categoryIncomeList;
	}
	public String[] getCategoryId() {
		return categoryId;
	}
	public void setCategoryId(String[] categoryId) {
		this.categoryId = categoryId;
	}
	public void setCategoryIncomeList(List<CategoryVO> categoryIncomeList) {
		this.categoryIncomeList = categoryIncomeList;
	}
	public String getEndDate() {
		return endDate;
	}
	public void setEndDate(String endDate) {
		this.endDate = endDate;
	}
	public String[] getCategoryIncomeId() {
		return categoryIncomeId;
	}
	public void setCategoryIncomeId(String[] categoryIncomeId) {
		this.categoryIncomeId = categoryIncomeId;
	}
	public String getStyle() {
		return style;
	}
	public void setStyle(String style) {
		this.style = style;
	}

	public String getStartDate() {
		return startDate;
	}
	public void setStartDate(String startDate) {
		this.startDate = startDate;
	}

	private String categoryStatus;
	public int getCategoryTypeId() {
		return categoryTypeId;
	}

	public void setCategoryTypeId(int categoryTypeId) {
		this.categoryTypeId = categoryTypeId;
	}
	private int categoryTypeId;
    private CategoryView categoryView=new CategoryView();
	//Generated by Map
	private List<CategoryVO> categoryList=new ArrayList<CategoryVO>();
	private static Map<String,Object> categoryStatusList;
	private static Map<String,Object> categoryTypeList;
	static{
		categoryStatusList = new LinkedHashMap<String,Object>();
		categoryStatusList.put("Active", "2"); //label, value
		categoryStatusList.put("Canceled", "3");
		categoryStatusList.put("Suspended", "1");
		categoryTypeList=new LinkedHashMap<String,Object>();
		categoryTypeList.put("Revenues", "1");
		categoryTypeList.put("Expenses", "2");
	}

	public  Map<String, Object> getCategoryStatusList() {
		return categoryStatusList;
	}

	public  void setCategoryStatusList(Map<String, Object> categoryStatusList) {
		BudgetView.categoryStatusList = categoryStatusList;
	}

	public  Map<String, Object> getCategoryTypeList() {
		return categoryTypeList;
	}

	public static void setCategoryTypeList(Map<String, Object> categoryTypeList) {
		BudgetView.categoryTypeList = categoryTypeList;
	}



	public String getCategoryStatus() {
		return categoryStatus;
	}
	public void setCategoryStatus(String categoryStatus) {
		this.categoryStatus = categoryStatus;
	}	

	
	public void refesh() throws Exception
	{
		 categoryList=categoryView.getExpensesCategories();
		 monthlyBudgetVO=getActiveMonthlyBudgetByUserId();
		 monthlyBudgetVO.setCompletedRatio((monthlyBudgetVO.getTotalExpenses()/monthlyBudgetVO.getTotalIncomes())*100);
	     System.out.println(monthlyBudgetVO.getCompletedRatio());
	     style ="width:"+monthlyBudgetVO.getCompletedRatio()+"%";
	}
	public List<CategoryVO> getCategoryList() {
		return categoryList;
	}

	public void setCategoryList(List<CategoryVO> categoryList) {
		this.categoryList = categoryList;
	}

	@Action
	public void add() throws BusinessException
	{
		String responseMessage="";
		try
		{
	    String requestData="<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\" ?><createTransaction><serviceCode>5</serviceCode><startDate>"+getStartDate()+"</startDate><endDate>"+getEndDate()+"</endDate><incomeCategoriesId>"+Arrays.toString(getCategoryIncomeId())+"</incomeCategoriesId><expenseCategoriesId>"+Arrays.toString(getCategoryId())+"</expenseCategoriesId></createTransaction>]]>";
		String response=callTransactionService(requestData);
		System.out.println("Call Transaction Service For Location .....");
		TransactionServiceParser transactionServiceParser=new  TransactionServiceParser();
		responseMessage=transactionServiceParser.parseCreateTransactionResponse(response);
		System.out.print(responseMessage);	
		} catch (Exception e) {
			// TODO Auto-generated catch block	
			if(e instanceof BusinessException)
			{
				System.out.println(e);
				throw new BusinessException(e.toString());
			}
		}
		setStatus(true);;
		setMessage(responseMessage);
		reset();
	}
	
	public void reset()
	{
		setStartDate("");
		
		
	}
	public MonthlyBudgetVO getActiveMonthlyBudgetByUserId() throws  Exception
	{
		try {

			String output =callPostWebService("getActiveMonthlyBudgetByUserId");
			System.out.println("Call getActiveMonthlyBudgetByUserId .....");
			Gson gson=new Gson();
		    Object obj = gson.fromJson(output, MonthlyBudgetKeyBasedDocument.class);
		    MonthlyBudgetKeyBasedDocument monthlyBudgetKeyBasedDocument=(MonthlyBudgetKeyBasedDocument)obj;
		    MonthlyBudgetVO monthlyBudgetVO=(MonthlyBudgetVO)monthlyBudgetKeyBasedDocument.getMonthlyBudgetVO();
		    return monthlyBudgetVO;

	}catch(Exception e)
		{
		             setStatus(false);
					if(e instanceof BusinessException)
					{
						System.out.println(e);
						throw new BusinessException(e.toString());
					}else
					{
						System.out.println(e);
						throw new Exception(e);
					}
		}
		}

    
	
}
